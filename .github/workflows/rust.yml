name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: windows-latest-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: windows-latest-stable-cargo-index-${{ hashFiles('**/Cargo.toml') }}
    
    - name: Cache cargo debug build
      uses: actions/cache@v1
      with:
        path: target/debug
        key: windows-latest-stable-cargo-build-target-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo release build
      uses: actions/cache@v1
      with:
        path: target/release
        key: windows-latest-stable-cargo-release-target-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo doc
      uses: actions/cache@v1
      with:
        path: target/doc
        key: windows-latest-stable-cargo-doc-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache cargo wasm build
      uses: actions/cache@v1
      with:
        path: target/wasm32-unknown-unknown
        key: windows-latest-stable-cargo-wasm32-unknown-unknown-target-${{ hashFiles('**/Cargo.toml') }}

    - name: Cache wasm-pack install
      uses: actions/cache@v1
      with:
        path: target/wasm
        key: windows-latest-stable-cargo-wasm-${{ hashFiles('**/Cargo.toml') }}

#    - name: Fmt Check
#      uses: actions-rs/cargo@v1
#      with:
#        command: fmt
#        args: --all -- --check

#    - name: Clippy warnings Check
#      uses: actions-rs/cargo@v1
#      with:
#        command: clippy
#        args: -- -D warnings

#    - name: Debug build
#      uses: actions-rs/cargo@v1
#      with:
#          command: build
#          args: --verbose

#    - name: Debug tests check
#      uses: actions-rs/cargo@v1
#      with:
#          command: test
#          args: --verbose

    - name: Debug wasm check
      uses: actions-rs/cargo@v1
      with:
        command: check
        target: wasm32-unknown-unknown
        override: true

    - name: Doc build
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --all --no-deps

    - name: Install wasm-pack
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: --target-dir ./target/wasm/ wasm-pack
    
    - name: Build Debug wasm
      run: wasm-pack build --target web

    - name: Prepare Doc and Wasm deploy
      run: |
        mkdir publish
        mkdir publish\doc\
        mkdir publish\pkg\
        xcopy .\target\doc .\publish\doc\ /s /e  
        xcopy .\pkg .\publish\pkg\ /s /e
        xcopy .\index.html .\publish\
        xcopy .\index.js .\publish\
        xcopy .\index_workaround.js .\publish\
        del .\publish\pkg\.gitignore

    - name: Doc and Wasm deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.ACTIONS_PERSONAL_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./publish
        keep_files: false
